export const searchIndex = [
  {
    "title": "",
    "headers": [
      {
        "level": 3,
        "title": "Какие методы HTTP-запросов вы знаете?",
        "slug": "какие-методы-http-запросов-вы-знаете",
        "link": "#какие-методы-http-запросов-вы-знаете",
        "children": []
      },
      {
        "level": 3,
        "title": "Какие версии HTTP-протокола вам известны?",
        "slug": "какие-версии-http-протокола-вам-известны",
        "link": "#какие-версии-http-протокола-вам-известны",
        "children": []
      },
      {
        "level": 3,
        "title": "Какие знаете коды ответа (состояния) HTTP?",
        "slug": "какие-знаете-коды-ответа-состояния-http",
        "link": "#какие-знаете-коды-ответа-состояния-http",
        "children": []
      },
      {
        "level": 3,
        "title": "Что такое Cross-Origin Resource Sharing? Как устранить проблемы с CORS?",
        "slug": "что-такое-cross-origin-resource-sharing-как-устранить-проблемы-с-cors",
        "link": "#что-такое-cross-origin-resource-sharing-как-устранить-проблемы-с-cors",
        "children": []
      },
      {
        "level": 3,
        "title": "Какие в JS есть типы данных?",
        "slug": "какие-в-js-есть-типы-данных",
        "link": "#какие-в-js-есть-типы-данных",
        "children": []
      },
      {
        "level": 3,
        "title": "Как проверить, является ли объект массивом?",
        "slug": "как-проверить-является-ли-объект-массивом",
        "link": "#как-проверить-является-ли-объект-массивом",
        "children": []
      },
      {
        "level": 3,
        "title": "Как проверить, является ли число конечным?",
        "slug": "как-проверить-является-ли-число-конечным",
        "link": "#как-проверить-является-ли-число-конечным",
        "children": []
      },
      {
        "level": 3,
        "title": "Как проверить, что переменная равна NaN?",
        "slug": "как-проверить-что-переменная-равна-nan",
        "link": "#как-проверить-что-переменная-равна-nan",
        "children": []
      },
      {
        "level": 3,
        "title": "Сравните ключевые слова var, let, const.",
        "slug": "сравните-ключевые-слова-var-let-const",
        "link": "#сравните-ключевые-слова-var-let-const",
        "children": []
      },
      {
        "level": 3,
        "title": "Что такое область видимости?",
        "slug": "что-такое-область-видимости",
        "link": "#что-такое-область-видимости",
        "children": []
      },
      {
        "level": 3,
        "title": "Что такое деструктуризация?",
        "slug": "что-такое-деструктуризация",
        "link": "#что-такое-деструктуризация",
        "children": []
      },
      {
        "level": 3,
        "title": "Для чего предназначены методы setTimeout и setInterval?",
        "slug": "для-чего-предназначены-методы-settimeout-и-setinterval",
        "link": "#для-чего-предназначены-методы-settimeout-и-setinterval",
        "children": []
      },
      {
        "level": 3,
        "title": "Опишите назначение и принципы работы с коллекциями Map и Set.",
        "slug": "опишите-назначение-и-принципы-работы-с-коллекциями-map-и-set",
        "link": "#опишите-назначение-и-принципы-работы-с-коллекциями-map-и-set",
        "children": []
      },
      {
        "level": 3,
        "title": "Что означает глубокая (deep) и поверхностная (shallow) копия объекта? Как сделать каждую из них?",
        "slug": "что-означает-глубокая-deep-и-поверхностная-shallow-копия-объекта-как-сделать-каждую-из-них",
        "link": "#что-означает-глубокая-deep-и-поверхностная-shallow-копия-объекта-как-сделать-каждую-из-них",
        "children": []
      },
      {
        "level": 3,
        "title": "В чем разница между оператором in и методом hasOwnProperty?",
        "slug": "в-чем-разница-между-оператором-in-и-методом-hasownproperty",
        "link": "#в-чем-разница-между-оператором-in-и-методом-hasownproperty",
        "children": []
      },
      {
        "level": 3,
        "title": "Что такое прототип? Как работает прототипное наследование в JS?",
        "slug": "что-такое-прототип-как-работает-прототипное-наследование-в-js",
        "link": "#что-такое-прототип-как-работает-прототипное-наследование-в-js",
        "children": []
      },
      {
        "level": 3,
        "title": "Расскажите о базовом устройстве и механизме работы Event loop.",
        "slug": "расскажите-о-базовом-устроистве-и-механизме-работы-event-loop",
        "link": "#расскажите-о-базовом-устроистве-и-механизме-работы-event-loop",
        "children": []
      },
      {
        "level": 3,
        "title": "Что такое Promise? Назовите порядок выполнения then и catch в цепочке.",
        "slug": "что-такое-promise-назовите-порядок-выполнения-then-и-catch-в-цепочке",
        "link": "#что-такое-promise-назовите-порядок-выполнения-then-и-catch-в-цепочке",
        "children": []
      },
      {
        "level": 3,
        "title": "Что такое Promise.all()?",
        "slug": "что-такое-promise-all",
        "link": "#что-такое-promise-all",
        "children": []
      },
      {
        "level": 3,
        "title": "Расскажите о типе данных Symbol и его практическом применении.",
        "slug": "расскажите-о-типе-данных-symbol-и-его-практическом-применении",
        "link": "#расскажите-о-типе-данных-symbol-и-его-практическом-применении",
        "children": []
      },
      {
        "level": 3,
        "title": "В чем разница между декларацией функции (function declaration) и функциональным выражением (function expression)?",
        "slug": "в-чем-разница-между-декларациеи-функции-function-declaration-и-функциональным-выражением-function-expression",
        "link": "#в-чем-разница-между-декларациеи-функции-function-declaration-и-функциональным-выражением-function-expression",
        "children": []
      },
      {
        "level": 3,
        "title": "Что такое анонимная функция?",
        "slug": "что-такое-анонимная-функция",
        "link": "#что-такое-анонимная-функция",
        "children": []
      },
      {
        "level": 3,
        "title": "Что такое функция высшего порядка?",
        "slug": "что-такое-функция-высшего-порядка",
        "link": "#что-такое-функция-высшего-порядка",
        "children": []
      },
      {
        "level": 3,
        "title": "Что такое чистая функция?",
        "slug": "что-такое-чистая-функция",
        "link": "#что-такое-чистая-функция",
        "children": []
      },
      {
        "level": 3,
        "title": "Что такое побочный эффект у функций?",
        "slug": "что-такое-побочныи-эффект-у-функции",
        "link": "#что-такое-побочныи-эффект-у-функции",
        "children": []
      },
      {
        "level": 3,
        "title": "Что такое и для чего используют IIFE (Immediately Invoked Function Expression)?",
        "slug": "что-такое-и-для-чего-используют-iife-immediately-invoked-function-expression",
        "link": "#что-такое-и-для-чего-используют-iife-immediately-invoked-function-expression",
        "children": []
      },
      {
        "level": 3,
        "title": "Что такое hoisting, как он работает для переменных и функций?",
        "slug": "что-такое-hoisting-как-он-работает-для-переменных-и-функции",
        "link": "#что-такое-hoisting-как-он-работает-для-переменных-и-функции",
        "children": []
      },
      {
        "level": 3,
        "title": "Что такое замыкание (closure) и каковы сценарии его использования?",
        "slug": "что-такое-замыкание-closure-и-каковы-сценарии-его-использования",
        "link": "#что-такое-замыкание-closure-и-каковы-сценарии-его-использования",
        "children": []
      },
      {
        "level": 3,
        "title": "Как вы понимаете замыкания? Что будет выведено в консоли в этом случае?",
        "slug": "как-вы-понимаете-замыкания-что-будет-выведено-в-консоли-в-этом-случае",
        "link": "#как-вы-понимаете-замыкания-что-будет-выведено-в-консоли-в-этом-случае",
        "children": []
      },
      {
        "level": 3,
        "title": "Что такое рекурсия?",
        "slug": "что-такое-рекурсия",
        "link": "#что-такое-рекурсия",
        "children": []
      }
    ],
    "path": "/",
    "pathLocale": "/",
    "extraFields": []
  },
  {
    "title": "",
    "headers": [],
    "path": "/404.html",
    "pathLocale": "/",
    "extraFields": []
  }
]

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updateSearchIndex) {
    __VUE_HMR_RUNTIME__.updateSearchIndex(searchIndex)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ searchIndex }) => {
    __VUE_HMR_RUNTIME__.updateSearchIndex(searchIndex)
  })
}
